{"version":3,"sources":["webpack:///./src/views/data/RankChart.vue?2803","webpack:///./src/views/data/RankChart.vue?353d","webpack:///./src/components/charts/dynamicRankChart.vue?d46a","webpack:///./src/components/charts/charts.js","webpack:///src/components/charts/dynamicRankChart.vue","webpack:///./src/components/charts/dynamicRankChart.vue?c697","webpack:///./src/components/charts/dynamicRankChart.vue","webpack:///src/views/data/RankChart.vue","webpack:///./src/views/data/RankChart.vue?6627","webpack:///./src/views/data/RankChart.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","attrs","rankData","colorCofig","dateIndex","labelIndex","labelCodeIndex","dimension","renderData","startDateIndex","_e","staticRenderFns","_v","lineChartOptions","title","text","tooltip","trigger","axisPointer","type","legend","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","init","options","dom","chart","echarts","setOption","addLineChart","data","Object","assign","yAxisData","updateData","DatasetComponent","GraphicComponent","GridComponent","BarChart","CanvasRenderer","props","updateFrequency","default","required","validator","Array","isArray","header","r","mounted","methods","top","max","axisLabel","formatter","Math","round","n","dataset","source","d","startDate","inverse","show","fontSize","value","rich","flag","padding","animationDuration","animationDurationUpdate","series","realtimeSort","seriesLayoutBy","itemStyle","color","encode","x","y","label","precision","position","valueAnimation","fontFamily","animationEasing","animationEasingUpdate","graphic","elements","style","font","fill","z","myChart","charts","option","$el","i","setTimeout","updateDate","date","getAllDate","dateList","includes","item","component","lineChartData","lineRachChartOptins","countries","countryColName","dateColName","dataItemName","components","DynamicRankChart","$api","getCovidData","then","lines","index","values","forEach","420100","440300","440100","110102","440400","showLineRaceChart","vm","init1","ROOT_PATH","chartDom","Australia","Canada","China","Cuba","Finland","France","Germany","Iceland","India","Japan","Norway","Poland","Russia","Turkey","Promise","years","length","getFlag","countryName","flags","emoji","startYear","updateYear","year","getData","url","axios","resolve"],"mappings":"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","file":"assets/js/chunk-45833292.ca1854cc.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RankChart.vue?vue&type=style&index=0&id=8828faaa&lang=less&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrap\"},[_vm._m(0),(_vm.rankData)?_c('DynamicRankChart',{staticClass:\"chart\",attrs:{\"colorCofig\":_vm.rankData.colorCofig,\"dateIndex\":_vm.rankData.dateIndex,\"labelIndex\":_vm.rankData.labelIndex,\"labelCodeIndex\":_vm.rankData.labelCodeIndex,\"dimension\":_vm.rankData.dimension,\"renderData\":_vm.rankData.renderData,\"startDateIndex\":_vm.rankData.startDateIndex}}):_vm._e()],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"title\"},[_c('h2',[_vm._v(\"国内 确诊病例 TOP10 的城市变化过程\")])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import * as echarts from 'echarts'\r\nconst lineChartOptions = {\r\n  title: {\r\n    text: 'World Population'\r\n  },\r\n  tooltip: {\r\n    trigger: 'axis',\r\n    axisPointer: {\r\n      type: 'shadow'\r\n    }\r\n  },\r\n  legend: {},\r\n  grid: {\r\n    left: '3%',\r\n    right: '4%',\r\n    bottom: '3%',\r\n    containLabel: true\r\n  },\r\n  xAxis: {\r\n    type: 'value',\r\n    boundaryGap: [0, 0.01]\r\n  },\r\n  yAxis: {\r\n    type: 'category'\r\n    // data: ['Brazil', 'Indonesia', 'USA', 'India', 'China', 'World']\r\n  },\r\n  // series: [\r\n  //   {\r\n  //     name: '2011',\r\n  //     type: 'bar',\r\n  //     data: [18203, 23489, 29034, 104970, 131744, 630230]\r\n  //   },\r\n  //   {\r\n  //     name: '2012',\r\n  //     type: 'bar',\r\n  //     data: [19325, 23438, 31000, 121594, 134141, 681807]\r\n  //   }\r\n  // ]\r\n}\r\nexport default {\r\n  init (options, dom) {\r\n    const chart = echarts.init(dom)\r\n    if (chart) {\r\n      chart.setOption(options)\r\n    }\r\n    return chart\r\n  },\r\n  addLineChart (data, dom) {\r\n    const options = Object.assign({}, data, lineChartOptions)\r\n    options.yAxis.data = data.yAxisData\r\n\r\n    const chart = this.init(options, dom)\r\n    chart.updateData = function (data) {\r\n      const options = Object.assign({}, data, lineChartOptions)\r\n      options.yAxis.data = data.yAxisData\r\n      chart.setOption(options)\r\n    }\r\n    return chart\r\n  }\r\n}\r\n","<template>\r\n  <!-- 动态排名图 -->\r\n  <div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts/core'\r\nimport {\r\n  DatasetComponent,\r\n  GraphicComponent,\r\n  GridComponent\r\n} from 'echarts/components'\r\nimport { BarChart } from 'echarts/charts'\r\nimport { CanvasRenderer } from 'echarts/renderers'\r\nimport charts from './charts'\r\n\r\necharts.use([\r\n  DatasetComponent,\r\n  GraphicComponent,\r\n  GridComponent,\r\n  BarChart,\r\n  CanvasRenderer\r\n])\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n\r\n    }\r\n  },\r\n  props: {\r\n    // 颜色配置\r\n    colorCofig: {\r\n      type: Object\r\n    },\r\n    // 更新频率\r\n    updateFrequency: {\r\n      type: Number,\r\n      default: 1000\r\n    },\r\n    // 渲染柱形的数据索引，指示用数组中的哪条数据来渲染柱形\r\n    dimension: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    // 日期字段索引\r\n    dateIndex: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    // 标签值索引\r\n    labelIndex: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    // 标签对应ID索引, 颜色配置用这个值配\r\n    labelCodeIndex: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    // 用这个时间以后的数据来渲染\r\n    startDateIndex: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    // 用来渲染的数据\r\n    renderData: {\r\n      type: Array,\r\n      validator: function (value) {\r\n        const header = value[0]\r\n        if (!Array.isArray(header)) {\r\n          return false\r\n        }\r\n        // 首行必选是列名数组\r\n        const r = header.find((v) => typeof v !== 'string')\r\n        if (r) {\r\n          return false\r\n        }\r\n        return true\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    init () {\r\n      const data = this.renderData\r\n      const dateIndex = this.dateIndex\r\n      const labelIndex = this.labelIndex\r\n      const labelCodeIndex = this.labelCodeIndex\r\n      const colorsConfig = this.colorCofig\r\n      const dimension = this.dimension\r\n      const updateFrequency = this.updateFrequency\r\n\r\n      const dateList = this.getAllDate(data, this.dateIndex)\r\n      const startIndex = this.startDateIndex < dateList.length ? this.startDateIndex : 0\r\n      const startDate = dateList[startIndex]\r\n      const option = {\r\n        grid: {\r\n          top: 10,\r\n          bottom: 30,\r\n          left: 150,\r\n          right: 80\r\n        },\r\n        xAxis: {\r\n          max: 'dataMax',\r\n          axisLabel: {\r\n            formatter: function (n) {\r\n              return Math.round(n) + ''\r\n            }\r\n          }\r\n        },\r\n        dataset: {\r\n          source: data.slice(1).filter(function (d) {\r\n            return d[dateIndex] === startDate\r\n          })\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          inverse: true,\r\n          max: 10,\r\n          axisLabel: {\r\n            show: true,\r\n            fontSize: 14,\r\n            formatter: function (value) {\r\n              return value\r\n            },\r\n            rich: {\r\n              flag: {\r\n                fontSize: 25,\r\n                padding: 5\r\n              }\r\n            }\r\n          },\r\n          animationDuration: 300,\r\n          animationDurationUpdate: 300\r\n        },\r\n        series: [\r\n          {\r\n            realtimeSort: true,\r\n            seriesLayoutBy: 'column',\r\n            type: 'bar',\r\n            itemStyle: {\r\n              color: function (param) {\r\n                return colorsConfig[param.value[labelCodeIndex]] || '#5470c6'\r\n              }\r\n            },\r\n            encode: {\r\n              x: dimension,\r\n              y: labelIndex\r\n            },\r\n            label: {\r\n              show: true,\r\n              precision: 1,\r\n              position: 'right',\r\n              valueAnimation: true,\r\n              fontFamily: 'monospace'\r\n            }\r\n          }\r\n        ],\r\n        // Disable init animation.\r\n        animationDuration: 0,\r\n        animationDurationUpdate: updateFrequency,\r\n        animationEasing: 'linear',\r\n        animationEasingUpdate: 'linear',\r\n        graphic: {\r\n          elements: [\r\n            {\r\n              type: 'text',\r\n              right: 160,\r\n              bottom: 60,\r\n              style: {\r\n                text: startDate,\r\n                font: 'bolder 80px monospace',\r\n                fill: 'rgba(100, 100, 100, 0.25)'\r\n              },\r\n              z: 100\r\n            }\r\n          ]\r\n        }\r\n      }\r\n\r\n      var myChart = charts.init(option, this.$el)\r\n\r\n      for (let i = startIndex; i < dateList.length - 1; ++i) {\r\n        (function (i) {\r\n          setTimeout(function () {\r\n            updateDate(dateList[i + 1])\r\n          }, (i - startIndex) * updateFrequency)\r\n        })(i)\r\n      }\r\n\r\n      function updateDate (date) {\r\n        const source = data.slice(1).filter(function (d) {\r\n          return d[dateIndex] === date\r\n        })\r\n        option.series[0].data = source\r\n        option.graphic.elements[0].style.text = date\r\n        myChart.setOption(option)\r\n      }\r\n    },\r\n    getAllDate (data, dateIndex) {\r\n      const dateList = []\r\n      data.slice(1).forEach((item) => {\r\n        if (!dateList.includes(item[dateIndex])) {\r\n          dateList.push(item[dateIndex])\r\n        }\r\n      })\r\n      return dateList\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dynamicRankChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dynamicRankChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dynamicRankChart.vue?vue&type=template&id=1deed5c6&scoped=true&\"\nimport script from \"./dynamicRankChart.vue?vue&type=script&lang=js&\"\nexport * from \"./dynamicRankChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1deed5c6\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"wrap\">\r\n    <div class=\"title\">\r\n      <h2>国内 确诊病例 TOP10 的城市变化过程</h2>\r\n    </div>\r\n    <DynamicRankChart\r\n      v-if=\"rankData\"\r\n      :colorCofig=\"rankData.colorCofig\"\r\n      :dateIndex=\"rankData.dateIndex\"\r\n      :labelIndex=\"rankData.labelIndex\"\r\n      :labelCodeIndex=\"rankData.labelCodeIndex\"\r\n      :dimension=\"rankData.dimension\"\r\n      :renderData=\"rankData.renderData\"\r\n      :startDateIndex=\"rankData.startDateIndex\"\r\n      class=\"chart\"\r\n      >\r\n    </DynamicRankChart>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DynamicRankChart from '../../components/charts/dynamicRankChart.vue'\r\nimport axios from 'axios'\r\nexport default {\r\n  data () {\r\n    return {\r\n      lineChartData: undefined,\r\n      rankData: undefined,\r\n      lineRachChartOptins: {\r\n        renderData: [],\r\n        countries: [],\r\n        startDate: '',\r\n        countryColName: 'city',\r\n        dateColName: 'date',\r\n        dataItemName: '',\r\n        title: ''\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    DynamicRankChart\r\n  },\r\n\r\n  mounted () {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    init  () {\r\n      let vm = this\r\n      this.$api.getCovidData().then((csvData) => {\r\n        const lines = csvData.data.split('\\n')\r\n        const data = []\r\n        lines.forEach((line, index) => {\r\n          const values = line.split(',')\r\n          if (index === 0) {\r\n            data.push(values)\r\n          } else {\r\n            // 过滤出带城市的数据\r\n            if (values[6]) {\r\n              [7, 8, 9, 10].forEach((i) => {\r\n                values[i] = parseInt(values[i])\r\n              })\r\n              data.push(values)\r\n            }\r\n          }\r\n        })\r\n        return data\r\n      }).then((data) => {\r\n        const countryColors = {\r\n          420100: '#00008b',\r\n          440300: '#f00',\r\n          440100: '#ffde00',\r\n          110102: '#002a8f',\r\n          440400: '#003580'\r\n        }\r\n\r\n        const options = {\r\n          renderData: data,\r\n          colorCofig: countryColors,\r\n          dimension: 7,\r\n          dateIndex: 0,\r\n          labelIndex: 5,\r\n          labelCodeIndex: 6,\r\n          startDateIndex: 40\r\n        }\r\n        this.rankData = options\r\n      })\r\n    },\r\n    showLineRaceChart () {\r\n      let vm = this\r\n      this.$api.getCovidData().then((csvData) => {\r\n        const lines = csvData.data.split('\\n')\r\n        const data = []\r\n        lines.forEach((line, index) => {\r\n          const values = line.split(',')\r\n          if (index === 0) {\r\n            data.push(values)\r\n          } else {\r\n            // 过滤出带城市的数据\r\n            if (values[6]) {\r\n              [7, 8, 9, 10].forEach((i) => {\r\n                values[i] = parseInt(values[i])\r\n              })\r\n              data.push(values)\r\n            }\r\n          }\r\n        })\r\n        return data\r\n      }).then((data) => {\r\n        const citys = [\r\n          '武汉市',\r\n          '深圳市',\r\n          '广州市',\r\n          '黄冈市'\r\n        ]\r\n        vm.lineRachChartOptins.countries = citys\r\n        vm.lineRachChartOptins.startDate = '2020-02-14'\r\n        vm.lineRachChartOptins.countryColName = 'city'\r\n        vm.lineRachChartOptins.dateColName = 'date'\r\n        vm.lineRachChartOptins.dataItemName = 'confirmed'\r\n        vm.lineRachChartOptins.title = '增长'\r\n        vm.lineRachChartOptins.renderData = data\r\n      })\r\n    },\r\n    init1 () {\r\n      let vm = this\r\n      var ROOT_PATH =\r\n  'https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/examples'\r\n\r\n      var chartDom = this.$el\r\n      var myChart = echarts.init(chartDom)\r\n      var option\r\n\r\n      const updateFrequency = 2000\r\n      const dimension = 0\r\n      const countryColors = {\r\n        Australia: '#00008b',\r\n        Canada: '#f00',\r\n        China: '#ffde00',\r\n        Cuba: '#002a8f',\r\n        Finland: '#003580',\r\n        France: '#ed2939',\r\n        Germany: '#000',\r\n        Iceland: '#003897',\r\n        India: '#f93',\r\n        Japan: '#bc002d',\r\n        'North Korea': '#024fa2',\r\n        'South Korea': '#000',\r\n        'New Zealand': '#00247d',\r\n        Norway: '#ef2b2d',\r\n        Poland: '#dc143c',\r\n        Russia: '#d52b1e',\r\n        Turkey: '#e30a17',\r\n        'United Kingdom': '#00247d',\r\n        'United States': '#b22234'\r\n      }\r\n      const data1 = vm.getData('https://cdn.jsdelivr.net/npm/emoji-flags@1.3.0/data.json')\r\n      const data2 = vm.getData(ROOT_PATH + '/data/asset/data/life-expectancy-table.json')\r\n\r\n      Promise.all([data1, data2]).then((datas) => {\r\n        const flags = datas[0].data\r\n        const data = datas[1].data\r\n        const years = []\r\n        for (let i = 0; i < data.length; ++i) {\r\n          if (years.length === 0 || years[years.length - 1] !== data[i][4]) {\r\n            years.push(data[i][4])\r\n          }\r\n        }\r\n        function getFlag (countryName) {\r\n          if (!countryName) {\r\n            return ''\r\n          }\r\n          return (\r\n            flags.find(function (item) {\r\n              return item.name === countryName\r\n            }) || {}\r\n          ).emoji\r\n        }\r\n        const startIndex = 10\r\n        const startYear = years[startIndex]\r\n        option = {\r\n          grid: {\r\n            top: 10,\r\n            bottom: 30,\r\n            left: 150,\r\n            right: 80\r\n          },\r\n          xAxis: {\r\n            max: 'dataMax',\r\n            axisLabel: {\r\n              formatter: function (n) {\r\n                return Math.round(n) + ''\r\n              }\r\n            }\r\n          },\r\n          dataset: {\r\n            source: data.slice(1).filter(function (d) {\r\n              return d[4] === startYear\r\n            })\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            inverse: true,\r\n            max: 10,\r\n            axisLabel: {\r\n              show: true,\r\n              fontSize: 14,\r\n              formatter: function (value) {\r\n                return value + '{flag|' + getFlag(value) + '}'\r\n              },\r\n              rich: {\r\n                flag: {\r\n                  fontSize: 25,\r\n                  padding: 5\r\n                }\r\n              }\r\n            },\r\n            animationDuration: 300,\r\n            animationDurationUpdate: 300\r\n          },\r\n          series: [\r\n            {\r\n              realtimeSort: true,\r\n              seriesLayoutBy: 'column',\r\n              type: 'bar',\r\n              itemStyle: {\r\n                color: function (param) {\r\n                  return countryColors[param.value[3]] || '#5470c6'\r\n                }\r\n              },\r\n              encode: {\r\n                x: dimension,\r\n                y: 3\r\n              },\r\n              label: {\r\n                show: true,\r\n                precision: 1,\r\n                position: 'right',\r\n                valueAnimation: true,\r\n                fontFamily: 'monospace'\r\n              }\r\n            }\r\n          ],\r\n          // Disable init animation.\r\n          animationDuration: 0,\r\n          animationDurationUpdate: updateFrequency,\r\n          animationEasing: 'linear',\r\n          animationEasingUpdate: 'linear',\r\n          graphic: {\r\n            elements: [\r\n              {\r\n                type: 'text',\r\n                right: 160,\r\n                bottom: 60,\r\n                style: {\r\n                  text: startYear,\r\n                  font: 'bolder 80px monospace',\r\n                  fill: 'rgba(100, 100, 100, 0.25)'\r\n                },\r\n                z: 100\r\n              }\r\n            ]\r\n          }\r\n        }\r\n        // console.log(option);\r\n        myChart.setOption(option)\r\n        for (let i = startIndex; i < years.length - 1; ++i) {\r\n          (function (i) {\r\n            setTimeout(function () {\r\n              updateYear(years[i + 1])\r\n            }, (i - startIndex) * updateFrequency)\r\n          })(i)\r\n        }\r\n        function updateYear (year) {\r\n          const source = data.slice(1).filter(function (d) {\r\n            return d[4] === year\r\n          })\r\n          option.series[0].data = source\r\n          option.graphic.elements[0].style.text = year\r\n          myChart.setOption(option)\r\n        }\r\n      })\r\n    },\r\n    getData (url) {\r\n      return new Promise((resolve, reject) => {\r\n        axios.get(url).then((res) => {\r\n          resolve(res)\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .wrap{\r\n    margin: .5rem;\r\n    background-color: whitesmoke;\r\n    min-height:  calc(100vh - 30px);\r\n    color: black;\r\n    border-radius: 5px;\r\n    .title{\r\n      padding: 0 .5rem;\r\n      background: #2196f34a;\r\n      border-radius: 5px 5px 0 0;\r\n    }\r\n    .chart {\r\n      height: 600px;\r\n      padding: 0 .5rem;\r\n    }\r\n  }\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RankChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RankChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RankChart.vue?vue&type=template&id=8828faaa&scoped=true&\"\nimport script from \"./RankChart.vue?vue&type=script&lang=js&\"\nexport * from \"./RankChart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./RankChart.vue?vue&type=style&index=0&id=8828faaa&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8828faaa\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}